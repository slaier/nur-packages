name: "Build and populate cache"
on:
  push:
    branches:
      - main
      - develop
  pull_request:
  workflow_dispatch:
env:
  nurRepo: slaier
  cachixName: slaier
concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
jobs:
  tests:
    strategy:
      matrix:
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixos-22.05
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: "${{ matrix.nixPath }}"
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://slaier.cachix.org https://cache.nixos.org
            trusted-public-keys = slaier.cachix.org-1:NyXPOqlxuGWgyn0ApNHMopkbix3QjMUAcR+JOjjxLtU= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: ${{ env.cachixName }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Check flake evaluation
        run: nix -Lv flake check --show-trace
      - name: Check legacy evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD
      - name: Build nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
  update_nur:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref_protected
    steps:
      - name: Trigger NUR update
        run: curl -XPOST "https://nur-update.herokuapp.com/update?repo=${{ env.nurRepo }}"
